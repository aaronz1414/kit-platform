extend schema
    @link(
        url: "https://specs.apollo.dev/federation/v2.3"
        import: ["@key", "@interfaceObject"]
    )

type Query {
    myHistory: [ContentProgress!]!
}

type Mutation {
    recordArticleProgress(
        input: RecordArticleProgressInput!
    ): RecordArticleProgressPayload
    recordQuizProgress(
        input: RecordQuizProgressInput!
    ): RecordQuizProgressPayload
}

scalar DateTime

interface ContentProgress {
    startedAt: DateTime!
    lastProgressAt: DateTime!
    completedAt: DateTime
}

###########
# ARTICLE #
###########

type Article @key(fields: "id") {
    id: ID!
    myProgress: ArticleProgress
}

type ArticleProgress implements ContentProgress {
    startedAt: DateTime!
    lastProgressAt: DateTime!
    completedAt: DateTime
    percentage: Int!
}

input RecordArticleProgressInput {
    articleId: ID!
    percentage: Int!
}

type RecordArticleProgressPayload {
    progress: ArticleProgress
    # TODO: User errors could be added here
}

########
# QUIZ #
########

type Quiz @key(fields: "id") {
    id: ID!
    myProgress: QuizProgress
}

type QuizQuestion @key(fields: "id", resolvable: false) {
    id: ID!
}

type QuizProgress implements ContentProgress {
    startedAt: DateTime!
    lastProgressAt: DateTime!
    completedAt: DateTime
    latestQuestion: QuizQuestion!
}

input RecordQuizProgressInput {
    quizId: ID!
    latestQuestionId: ID!
}

type RecordQuizProgressPayload {
    progress: QuizProgress
    # TODO: Could add user errors here
}

#########
# VIDEO #
#########

type Video @key(fields: "id") {
    id: ID!
    testField: String!
}
